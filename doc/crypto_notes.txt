DENAME Record:
1.	KSK = Key-Signing Key (SigP = Signing Key)
	RAK = Ratchet Authentication Key: (DHP = Diffy-Hellman Public Key, also referred to as "User's key")

DHPs generated by choosing secret key and mapping to public key
To compute DH ever, you must have one of A and Bs public keys

SERVER:
2.	b1		DH Public Key
	b2
	b3		Signed using KSK from B (all messages are signed my B), potentially timestamp
	b4
	...


A wants to talk to B, generates
	a0 = DHP
	rk,  = DH(a0, b1) #shared key; A gets b1 from server when sending a message to B, confirms b1 is good through KSK from Dename
		-rk = makes DH only go in one way, rk calculated slightly after DH, so better, rk is combined with DH operation and then hashed
		-ck = hash on its own everytime you send a message
		-hk = Used to encrpyt message headers (need things from it to decrypt received message, so can't encrypt the same way)		
	ck = h(rk1, ) #generate chain key by hashing rk

	Sometimes B will send A a new DH key b in the header. Then, in the following message A sends to B:
		A generates new DH key a and key a' (a for encryption, a' for Dename authentication, Don't use same key because we don't want them to have same lifetimes)
		HK_{i+1} <-- NHK_i (received from the last time B sent you a new DH key)
		RK_{i+1}, CK, NHK_{i+1} <-- RK_i, DH(a,b)

	RK is the same for both A and B, everything else is A/B specific
	Every time you send a message:
		MK, CK_{i+1} <-- CK_i
		Start assembling message:
			Header = [N,Np,a,a']HKb (N = number of messages sent during the new DHp (0 if just set DHp), Np = messages in previous DHp. Set Np to N and N to 0 when generating a new DHp))
				Send a every time in case we lost the last message
				This HKb was actually generated one round trip above
				N = N + 1 or 0, Np = N optionally	
				a' in header but shouldn't be because not needed for decryption
			Body
			

	a0,b1,[msg]rk --> A sends message to B

	Don't want to use rk multiple times (so we cannot decrypt previous chats with compromised new chats)


Capital letters = DH Public Keys, not writing down the secret keys

